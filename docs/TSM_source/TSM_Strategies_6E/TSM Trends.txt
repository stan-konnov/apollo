[LegacyColorValue = true]; 

// PJK Trends : Trend systems
// Copyright 2012-2018, P J Kaufman. All rights reserved. 

{ period = length of calculaton
  entryoption 	= 0 buy/sell on current close
  					= 1 buy/sell on next open
  					= 2 buy/sell next close 
  crossoption  = 0 using trendline, 
					= 1 use price crossing trendline 
  longonly		true then only long positions
  high-vol filter
}
  input: usemovingaverage(true), usebreakout(false), useslope(false), useexponential(false), period(80), 
			entryoption(0), crossoption(0), longonly(false), exitvol(0), reentervol(0), stoploss(0), 
			 usestocks(true),usefutures(false),variablesize(true), reinvest(false), futuresinvestment(25000), 
			stockinvestment(10000), printfiles(false);
  vars:	signal(0), price(0), size(1), investment(1000), slope(0), ATRper(20), smooth(1.0),
  			atrange(0), MA(0), adate(" "), equity(0), PL(0), PLlong(0), PLshort(0), exposure(0),
			expsmooth(0), tradeentry(0), tradeentrybar(0), tradeprice(0),dailyreturn(0), NAV(100),
			volper(20), returns(0), vol(0), exitvolOK(true), reentervolOK(true), exitonstop(0),
			bestprice(0);
  			
  	If Currentbar = 1 then begin
		if usestocks then begin
				investment = stockinvestment;
				if variablesize = false then size = 100;
				end
			else begin
				investment = futuresinvestment;
				if variablesize = false then size = 1;
			end; 
		if useexponential then smooth = 2/(period + 1);
		end;

	if variablesize then begin
		if usefutures then begin
			atrange = avgtruerange(ATRper);
			if atrange = 0 then 
					size = 1
				else
					if atrange <> 0 then size = investment/(atrange*bigpointvalue);
			end;
		if usestocks then begin
			if close[1] <> 0 then size = investment/close[1];
			end;
		end;

	if usemovingaverage then begin
			MA = average(close,period);
			if crossoption = 0 then begin
					if MA > MA[1] then signal = 1
						else if MA < MA[1] then signal = -1;
					end
				else if crossoption = 1 then begin
					if close >= MA then signal = 1
						else signal = -1;
				end;
			end
		else if usebreakout then begin
			if high > highest(high[1],period) then signal = 1
				else if low < lowest(low[1],period) then signal = -1;
			end
		else if useslope then begin
			slope = linearregslope(close,period);
			if slope > 0 then signal = 1
				else if slope < 0 then signal = -1;
			end
		else if useexponential then begin
			if currentbar = 1 then 
					expsmooth = close
				else begin
					expsmooth = expsmooth + smooth*(close - expsmooth);
				end;
			if expsmooth > expsmooth[1] then signal = 1
				else if expsmooth < expsmooth[1] then signal = -1;
		end;

// reset exit on stop
	if exitonstop <> 0 then begin
		if exitonstop > 0 and signal < 0 then exitonstop = 0
			else if exitonstop < 0 and signal > 0 then exitonstop = 0;
		end;

// exit percentage trailing stop-loss
	if stoploss <> 0 and marketposition <> 0 then begin
// return on trade as of close
//		PL = marketposition*currentcontracts*(close - entryprice);
		if marketposition > 0 then begin
//				bestprice = maxlist(bestprice,high);
//				if close/bestprice - 1 < -stoploss then begin
				if close/entryprice - 1 < -stoploss then begin
					sell ("XLstop") all contracts next bar on open;
					exitonstop = marketposition;
					end;
				end
			else if marketposition < 0 then begin
				bestprice = minlist(bestprice,low);
				if bestprice/close - 1 < -stoploss then begin
					buy to cover ("XSstop") all contracts next bar on open;
					exitonstop = marketposition;
					end;
			end;
		end;

// exit volatility filter
	if exitvol <> 0 then begin
		returns = close/close[1] - 1;
		vol = stddev(returns,volper)*squareroot(252.);
		if reentervol <> 0 and vol < reentervol then exitvolOK = true;
		if vol > exitvol then exitvolOK = false;
// exit on volatility filter
		if marketposition <> 0 and exitvolOK = false then begin
			if marketposition > 0 then sell ("XLvol") all contracts next bar on open
				else if marketposition < 0 then buy to cover ("XSvol") all contracts next bar on open;
			reentervolOK = false;
			end;
		end;
	if marketposition = 0 and reentervolOK = false and vol < reentervol 
			then reentervolOK = true;

{ entry and entry options, always reverse position }		
  	If entryoption = 0 and exitvolOK and exitonstop = 0 then begin
  			if signal = 1 and marketposition <> 1 then begin
 				if usemovingaverage then Buy ("BMA") size contracts this bar on close
					else if usebreakout then Buy ("BBO") size contracts this bar on close
					else if useslope then buy ("BLRS") size contracts this bar on close
					else if useexponential then buy ("BEXP") size contracts this bar on close;
//	  				adate = ELdatetostring(tradeentry);
//					print(file("c:\tradestation\Trend_trade_length.csv"), adate, ",", currentbar - tradeentrybar:5:0,
//							",", size*(close - tradeprice):8:2);
					tradeentry = date;
					tradeentrybar = currentbar;
					tradeprice = close;
					bestprice = close;
					end
  			else if signal = -1 and marketposition <> -1 then begin
  				if longonly then begin
						if usemovingaverage then sell ("XMA") all contracts this bar on close
							else if usebreakout then sell ("XBO") all contracts this bar on close
							else if useslope then sell ("XLRS") all contracts this bar on close
							else if useexponential then sell ("XEXP") all contracts this bar on close;
//	  					adate = ELdatetostring(tradeentry);
//						print(file("c:\tradestation\Trend_trade_length.csv"), adate, ",", currentbar - tradeentrybar:5:0,
//							",", size*(close - tradeprice):8:2);
						tradeentry = date;
						tradeentrybar = currentbar;
						tradeprice = close;
						bestprice = close;
						end
  					else begin
						if usemovingaverage then sell short ("SMA") size contracts this bar on close
							else if usebreakout then sell short ("SBO") size contracts this bar on close
							else if useslope then sell short ("SLRS") size contracts this bar on close
							else if useexponential then sell short ("SEXP") size contracts this bar on close;
//	  					adate = ELdatetostring(tradeentry);
//						print(file("c:\tradestation\Trend_trade_length.csv"), adate, ",", currentbar - tradeentrybar:5:0,
//							",", size*(close - tradeprice):8:2);
						tradeentry = date;
						tradeentrybar = currentbar;
						tradeprice = close;
						bestprice = close;
					end;
  				end;
  			end
  		else if entryoption = 1 and exitvolOK then begin
  			If signal = 1 and marketposition <> 1 then buy size contracts next bar on open
  			Else if signal = -1 and marketposition <> -1 then begin
  				if longonly then sell all contracts next bar on open
  					else sell short size contracts next bar on open;
  				end;
  			end
  		else if entryoption = 2 and exitvolOK then begin
  			If signal[1] = 1 and marketposition <> 1 then buy size contracts this bar on close
  				Else if signal[1] = -1 and marketposition <> -1 then begin
  					if longonly then sell all contracts next bar on open
  						else sell short size contracts next bar on open;
  				end;
  		end;
  	
	if lastbaronchart then
		if marketposition > 0 then sell all contracts this bar on close
			else if marketposition < 0 then buy to cover all contracts this bar on close;

 	equity = netprofit + openpositionprofit;
	PL = equity - equity[1];
	dailyreturn = 0;
	if investment <> 0 then dailyreturn = PL/investment;
	NAV = NAV*(1 + dailyreturn);
	if marketposition > 0 then
			PLlong = PLlong + PL
		else if marketposition < 0 then
			PLshort = PLshort + PL;

	if reinvest then investment = stockinvestment + equity;

  	If printfiles then begin
	  	adate = ELdatetostring(date);
//		if currentbar = 1 then begin
//			print(file("c:\tradestation\Trend_trade_length.csv"), "Enter,Days,PL");
//			end;
//		if usemovingaverage then begin
				If Currentbar = 1 then begin
					print(file("c:\tradestation\Trend_PL.csv"),"Date,TotalPL");
					print(file("c:\tradestation\Trend_Detail.csv"), 
							"Date,Open,High,Low,Close,MA,size,marketposition,PLtoday,PLlong,",
							"PLshort,TotalPL,Return,NAV");
					end;
  				print(file("c:\tradestation\Trend_PL.csv"),adate, ",", PL:8:4);
  				print(file("c:\tradestation\Trend_Detail.csv"),adate, ",", open:8:4, ",", high:8:4, ",", 
								low:8:4, ",", close:8:4, ",", MA:8:4, ",", currentcontracts:6:2, ",", 
								marketposition:6:2, ",", PL:8:4, ",", PLlong:8:4, ",", 
								PLshort:8:4, ",", equity:8:4, ",", dailyreturn:6:5, ",", NAV:10:3);
//				end
//			else if usebreakout then begin
//				If Currentbar = 1 then print(file("c:\tradestation\BO_PL.csv"), "Date,size,netPL,PLlong,PLshort,PLtoday");
//  				print(file("c:\tradestation\BO_PL.csv"),adate, ",", size:8:3, ",", equity:8:4, ",", PLlong:8:4, ",",
//								PLshort:8:4, ",", PL:8:4);
//				end
//			else if useslope then begin
//				If Currentbar = 1 then print(file("c:\tradestation\LRS_PL.csv"), "Date,size,netPL,PLlong,PLshort,PLtoday");
//  				print(file("c:\tradestation\LRS_PL.csv"),adate, ",", size:8:3, ",", equity:8:4, ",", PLlong:8:4, ",",
//								PLshort:8:4, ",", PL:8:4);
//			end;
		end;